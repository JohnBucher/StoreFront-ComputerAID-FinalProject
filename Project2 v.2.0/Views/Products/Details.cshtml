@model Store.Data.Product

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Layouts/_Layout1.cshtml";
}

@section scripts
{
    <script>
        function AddItem(elem) {
            //This Ajax will cal the OrderNow method and will add the selected item to the user's cart
            $.ajax({
                type: 'POST',
                url: '@Url.Action("ButtonOrderNow", "ShoppingCart")',
                data: { id: elem },
                        success: function (data) {  }
            });
            //-----------------------------------------------------------------------------------------------------------
            //After a change, this Ajax will update the Shopping Cart quantity count that is displayed alongside the Shopping Cart Button
            $.ajax({
                type: 'POST',
                        url: '@Url.Action("UpdateQuantity", "ShoppingCart")',
                        data: { id: elem },
                        success: function (data) {
                            $('#quantityContainer').html('<a href="/ShoppingCart/Cart">(' + data.UpQuantity + ') Shopping Cart</a>');
                        }
            });
        };
    </script>
}

<h2>Details</h2>
<!-- In charge of providing the Details view of a specific Product -->
<div>
    <hr />
    <!-- Order Now Button -->
    <button id="btn-@(Model.ProductID)" class="btn btn-danger btn-primary" OnClick="AddItem(@Model.ProductID)" data-assigned-id="@Model.ProductID">Add to Cart</button>
    <br />
    <br />

    <dl class="dl-horizontal">
        <!-- ProductName -->
        <dt>
            @Html.DisplayName("Product Name")
        </dt>
        <dd>
            @Html.DisplayFor(model => model.ProductName)
        </dd>

        <br />
        <!-- Desription -->
        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

        <br />
        <!-- Price -->
        <dt>
            @Html.DisplayNameFor(model => model.Price)
        </dt>
        @{ 
            decimal temp = (decimal)Model.Price;
            string cost = "$" + temp.ToString("0.00");
        }
        <dd>
            @Html.DisplayFor(model => cost)
        </dd>

        <br />
        <!-- ImageFile -->
        <dt>
            @Html.DisplayName(" ")
        </dt>
        <dd>
            @{
                string hold = Model.ImageFile;
            }
            <img src="@Url.Content(hold)" style="max-height: 440px" />
        </dd>

    </dl>
</div>
<!-- Back to the listing of Products -->
<p>
    @Html.ActionLink("Back to List", "Index")
</p>
